/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista.components;

import entidades.Auditoria_permiso;
import entidades.Usuario;
import entidades.permisos;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author programador1
 */
public class getHistorialPermiso extends javax.swing.JPanel {

    /**
     * Creates new form historialPermisos
     */
    public getHistorialPermiso() {
        initComponents();
        vista.util.botonComun.mouseHoverListener(this.btnBuscarHistorial);
    }

    private int getUsuarioCode() {
        try {
            int cod = Integer.parseInt(this.txtCodigoHistorial.getText());
            return cod;
        } catch (Exception e) {
            System.out.println("error " + e.getMessage());
            return -1;
        }
    }

    public ArrayList<permisos> serchHistorialPermisos() {
        ArrayList<permisos> lista = null;
        try {
            System.out.println("vista.components.getHistorialPermiso.serchHistorialPermisos()");
            vista.components.jTableHandler.clearJTable(this.tbHistorial);
            int cod = getUsuarioCode();
            Usuario us = null;
            if (cod > 0) {
                us = logica.UsuarioLogica.getUsuario(cod);
            } else {
                String name = this.txtCodigoHistorial.getText().replaceAll("\\s", "");
                us = logica.UsuarioLogica.getUsuario(name);
            }

            this.lbUsuarioHistorial.setText(us.getNombre() + " " + us.getApellido1() + " " + us.getApellido2() + " código " + us.getIdEmpleado());
            lista = logica.permisosLogica.getAllPermisosPorEmpleado(us);

        } catch (Exception e) {
            vista.components.jTableHandler.clearJTable(this.tbHistorial);
            this.lbUsuarioHistorial.setText("");
            JOptionPane.showMessageDialog(null, "Favor ingrese un id válido");
            return null;
        }
        return lista;
    }

    /**
     * this function gets the seleccted tbHistorial row value to serch for the
     * changes that has been made, to this register on the database, load the
     * changes as a string and then returns it
     *
     * @return a information string
     */
    public String getHistorialPermiso() {
        String historial = "";
        try {
            int rowIndex = tbHistorial.getSelectedRow();
            int colIndex = tbHistorial.getSelectedColumn();
            System.out.println("row " + rowIndex + " columnd " + colIndex);
            String value = tbHistorial.getModel().getValueAt(rowIndex, 0).toString();
            int idpermiso = Integer.parseInt(value);
            System.out.println("id " + value);
            ArrayList<Auditoria_permiso> lista = logica.auditoria_permisoLogica.getHistorialAuditoria(idpermiso);
            if (lista != null) {

                for (Auditoria_permiso a : lista) {
                    historial += "Usuario:  " + a.getUs().getNombre() + " " + a.getUs().getPrimer_Apellido() + " " + a.getUs().getSegundo_Apellido() + "\n";
                    historial += "Fecha:  " + a.getFecha_creacion() + "\n";
                    historial += "Anterior estado:  " + permisos.getDescripcionEstado(a.getAnterior_estado_permiso()) + "\n";
                    historial += "Nuevo estado:  " + permisos.getDescripcionEstado(a.getNuevo_estado_permiso()) + "\n\n";
                }

            }

        } catch (Exception er) {
            System.out.println("vista.components.getHistorialPermiso.getHistorialPermiso()");
            System.out.println("error " + er.getMessage());
        }
        return historial;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        histCentPnl = new javax.swing.JPanel();
        historialPermisosTb = new javax.swing.JScrollPane();
        tbHistorial = new javax.swing.JTable();
        top = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodigoHistorial = new javax.swing.JTextField();
        btnBuscarHistorial = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lbUsuarioHistorial = new javax.swing.JLabel();
        down = new javax.swing.JPanel();
        left = new javax.swing.JPanel();
        rigth = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true), "BUSCAR EN HISTORIAL"));
        setMaximumSize(new java.awt.Dimension(700, 500));
        setMinimumSize(new java.awt.Dimension(700, 500));
        setPreferredSize(new java.awt.Dimension(700, 500));
        setLayout(new java.awt.BorderLayout());

        histCentPnl.setBackground(new java.awt.Color(255, 255, 255));
        histCentPnl.setPreferredSize(new java.awt.Dimension(452, 402));
        histCentPnl.setLayout(new java.awt.GridLayout(1, 0));

        historialPermisosTb.setBackground(new java.awt.Color(255, 255, 255));

        tbHistorial.setGridColor(new java.awt.Color(255,255,255));
        tbHistorial

        .setDefaultRenderer(Object.class

            , new DefaultTableCellRenderer()
            {
                @Override
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                    c.setBackground(row % 2 == 0 ? new java.awt.Color(204, 255, 255) : Color.WHITE);
                    return c;
                }
            }
        );
        tbHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CREADO", "DESDE", "HASTA", "ESTADO", "COMPROBANTE", "TIPO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbHistorial.getTableHeader().setBackground(Color.RED);
        tbHistorial.getTableHeader().setForeground(Color.WHITE);
        tbHistorial.getTableHeader().setFont(new Font("Tahome",Font.BOLD, 15));
        tbHistorial.setCellSelectionEnabled(true);
        tbHistorial.setFillsViewportHeight(true);
        tbHistorial.setSelectionBackground(new java.awt.Color(153, 153, 153));
        tbHistorial.setSelectionForeground(new java.awt.Color(255, 0, 51));
        tbHistorial.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        historialPermisosTb.setViewportView(tbHistorial);
        if (tbHistorial.getColumnModel().getColumnCount() > 0) {
            tbHistorial.getColumnModel().getColumn(0).setMinWidth(0);
            tbHistorial.getColumnModel().getColumn(0).setPreferredWidth(0);
            tbHistorial.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        histCentPnl.add(historialPermisosTb);

        add(histCentPnl, java.awt.BorderLayout.CENTER);

        top.setBackground(new java.awt.Color(255, 255, 255));
        top.setPreferredSize(new java.awt.Dimension(394, 80));
        top.setLayout(new java.awt.GridLayout(2, 1, 5, 5));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridLayout(1, 1, 5, 5));

        jLabel1.setText("Código usuario");
        jPanel1.add(jLabel1);
        jPanel1.add(txtCodigoHistorial);

        btnBuscarHistorial.setBackground(new java.awt.Color(204, 255, 255));
        btnBuscarHistorial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/serch.png"))); // NOI18N
        btnBuscarHistorial.setText("BUSCAR");
        jPanel1.add(btnBuscarHistorial);

        top.add(jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));
        jPanel2.add(lbUsuarioHistorial);

        top.add(jPanel2);

        add(top, java.awt.BorderLayout.PAGE_START);

        down.setBackground(new java.awt.Color(255, 255, 255));
        down.setMaximumSize(new java.awt.Dimension(330, 50));
        down.setMinimumSize(new java.awt.Dimension(330, 50));
        down.setPreferredSize(new java.awt.Dimension(330, 50));

        javax.swing.GroupLayout downLayout = new javax.swing.GroupLayout(down);
        down.setLayout(downLayout);
        downLayout.setHorizontalGroup(
            downLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 688, Short.MAX_VALUE)
        );
        downLayout.setVerticalGroup(
            downLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        add(down, java.awt.BorderLayout.PAGE_END);

        left.setBackground(new java.awt.Color(255, 255, 255));
        left.setMaximumSize(new java.awt.Dimension(20, 300));
        left.setMinimumSize(new java.awt.Dimension(20, 300));
        left.setPreferredSize(new java.awt.Dimension(20, 300));

        javax.swing.GroupLayout leftLayout = new javax.swing.GroupLayout(left);
        left.setLayout(leftLayout);
        leftLayout.setHorizontalGroup(
            leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        leftLayout.setVerticalGroup(
            leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
        );

        add(left, java.awt.BorderLayout.LINE_END);

        rigth.setBackground(new java.awt.Color(255, 255, 255));
        rigth.setMaximumSize(new java.awt.Dimension(20, 300));
        rigth.setMinimumSize(new java.awt.Dimension(20, 300));
        rigth.setPreferredSize(new java.awt.Dimension(20, 300));

        javax.swing.GroupLayout rigthLayout = new javax.swing.GroupLayout(rigth);
        rigth.setLayout(rigthLayout);
        rigthLayout.setHorizontalGroup(
            rigthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        rigthLayout.setVerticalGroup(
            rigthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
        );

        add(rigth, java.awt.BorderLayout.LINE_START);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnBuscarHistorial;
    private javax.swing.JPanel down;
    private javax.swing.JPanel histCentPnl;
    public javax.swing.JScrollPane historialPermisosTb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JLabel lbUsuarioHistorial;
    private javax.swing.JPanel left;
    private javax.swing.JPanel rigth;
    public javax.swing.JTable tbHistorial;
    private javax.swing.JPanel top;
    public javax.swing.JTextField txtCodigoHistorial;
    // End of variables declaration//GEN-END:variables
}
